name: Flutter Android

on:
  pull_request:
    branches: ["main"]

env:
  flutter_channel: "stable"
  flutter_version: "3.24.1"

jobs:
  Android:
    timeout-minutes: 120
    runs-on: ubuntu-latest
    needs: [Test]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "11"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}

      - name: Setup store
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: "upload-keystore.jks"
          fileDir: "./android/app/"
          encodedString: ${{ secrets.UPLOAD_STORE }}

      - name: Setup store key
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: "key.properties"
          fileDir: "./android/"
          encodedString: ${{ secrets.UPLOAD_KEY }}

      - name: Setup firebase
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: "google-services.json"
          fileDir: "./android/app/"
          encodedString: ${{ secrets.FIREBASE_ANDROID }}

      - name: Setup firebase config
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: "firebase_options.dart"
          fileDir: "./lib/"
          encodedString: ${{ secrets.FIREBASE_CONFIG }}

      - name: Install dependencies
        run: flutter pub get

      - name: Build bundle
        run: flutter build appbundle --release --build-number=${{ github.run_number }}

      - name: Upload to firebase
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{ secrets.ANDROID_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
          groups: Testers
          file: build/app/outputs/bundle/release/app-release.aab

      - env:
          VERSION: ${{needs.Test.outputs.version}}
        run: echo "Version $VERSION uploaded"

  Test:
    timeout-minutes: 120
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.final }}
    steps:
      - name: Project clone
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}

      - name: Install dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        run: flutter analyze --fatal-warnings

      - name: Run tests
        run: flutter test

      - name: Extract version
        id: version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | cut -d '+' -f 1)
          echo "final=$version+${{ github.run_number }}" >> "$GITHUB_OUTPUT"
